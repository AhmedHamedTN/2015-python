# Exercise 3 - Text network analysis

In this exercise we'll use Python to read text and create a graph of
character relationships using `networkx`.

The goal of this assignment are:
    - become more comfortable working with text 
    - think about data sources in a new way
    - gain confidence in building graphs

This assignment is intentionally more open ended. 
There's no limit to how deep you can go here, and you are certainly
welcome to use and modify the code and ideas from day6. Graph theory is an
exciting field of research in math, stats, and computer science.

## Text Sources

Pick your favorite book. You are also welcome to use any other substantial
text source, like a movie script, email corpus, court transcript, 
or lengthy article.
You can find books at [Project Gutenberg](https://www.gutenberg.org/) and
movie scripts at the [Internet Movie Script Database](http://www.imsdb.com/).

# Analysis

## Think of questions

Think about questions that a graph can answer. For example:
    - What's the shortest path between two nodes?
    - Is the graph totally connected?
    - Are there several distinct groups?
    - Traveling salesman problem :) ? 

An example: Can you use a graph to pick out the threaded storylines in 
the movie Pulp Fiction?

## Graph function

Define an appropriate heuristic for building a graph. 

In class we used people as nodes and 
defined edges between them if their names appeared in 
the same sentence. One could also define edges to exist if names appear
in the same paragraph or within a certain number of characters. 

Another possibility is to use regular expressions to exploit the structure
of a transcript in a creative way.

## Build Graph

Build the graph using `networkx.Graph` for an undirected graph (ie.
direction has no meaning) or `networkx.DiGraph` if you
have a directed graph in mind. You can also set weights on the edges.

## Visualize

Use `networkx` and Matplotlib to visualize the graph. You may need to 
plot only a subsets of the nodes in order for it to appear meaningful. 
Consider using a visual representation of weighted edges.
For those who are more interested in graph visualization,
[Graphviz](http://www.graphviz.org/) is a wonderful tool. Use
`write_dot` to generate it from within `networkx`.

## Summarize

Answer the questions that you originally posed.
